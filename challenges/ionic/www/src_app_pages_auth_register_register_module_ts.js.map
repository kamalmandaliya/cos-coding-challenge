{"version":3,"file":"src_app_pages_auth_register_register_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AACR;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACfG;AACM;AACF;AAEA;AACgB;AACd;AACuB;IAMzD,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAJ9B,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,yDAAY,EAAE,uDAAW,EAAE,uDAAW,EAAE,+EAAyB,EAAE,+DAAY,CAAC;QAC1F,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACbmB;AACqD;IAO1F,YAAY,SAAZ,YAAY;IAYvB;QAXA,aAAQ,GAAc,IAAI,qDAAS,CACjC;YACE,SAAS,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YAChF,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/E,KAAK,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;YACxG,eAAe,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,EAAE,gEAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;SAChH,EACD,EAAE,UAAU,EAAE,IAAI,CAAC,6BAA6B,EAAE,CACnD,CAAC;IAEa,CAAC;IAEhB,UAAU;QACR,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAClC;IACH,CAAC;IAED,QAAQ,KAAU,CAAC;IAEnB,6BAA6B,CAAC,CAAkB;QAC9C,MAAM,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACnC,MAAM,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAEjD,IAAI,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YACjF,OAAO;SACR;QAED,IAAI,QAAQ,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK,EAAE;YAC5C,eAAe,CAAC,SAAS,CAAC;gBACxB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;SACJ;aAAM;YACL,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACjC;IACH,CAAC;CACF;;AAtCY,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qEAAmC;;KAEpC,CAAC;GACW,YAAY,CAsCxB;AAtCwB","sources":["./src/app/pages/auth/register/register-routing.module.ts","./src/app/pages/auth/register/register.module.ts","./src/app/pages/auth/register/register.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { RegisterPage } from './register.page';\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, RegisterPageRoutingModule, SharedModule],\n  declarations: [RegisterPage],\n})\nexport class RegisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  register: FormGroup = new FormGroup(\n    {\n      firstName: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n      lastName: new FormControl('', [Validators.required, Validators.maxLength(150)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(150)]),\n      passwordConfirm: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(150)]),\n    },\n    { validators: this.passwordConfirmMatchValidator },\n  );\n\n  constructor() {}\n\n  onRegister() {\n    if (this.register.valid) {\n      console.log(this.register.value);\n    }\n  }\n\n  ngOnInit(): void {}\n\n  passwordConfirmMatchValidator(g: AbstractControl): ValidationErrors | null {\n    const password = g.get('password');\n    const passwordConfirm = g.get('passwordConfirm');\n\n    if (passwordConfirm.hasError('required') || passwordConfirm.hasError('minlength')) {\n      return;\n    }\n\n    if (password.value !== passwordConfirm.value) {\n      passwordConfirm.setErrors({\n        mismatch: true,\n      });\n    } else {\n      passwordConfirm.setErrors(null);\n    }\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}